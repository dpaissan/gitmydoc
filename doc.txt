Diff:
    git diff origin/master master


Files:
    Show tracked files:
        git ls-files

    Restore a file:
        git co -- <file-name>

    Delete untracked files:
        git clean -f -d          # -f: files -d: directories


Tags:
    Add new tag:
        ... add, commit & push ...
        git tag -a v1.20.3 -m "Version 1.20.3"
        git push origin v1.20.3

    Move tag to a specific commit:
        git tag -d <tag-name>                    # delete the old tag locally
        git push origin :refs/tags/<tag-name>    # delete the old tag remotely
        git tag <tag-name> <commit-id>
        git push origin <tag-name>

    Delete tag:
        git tag -d <tag-name>                    # delete the old tag locally
        git push origin :refs/tags/<tag-name>    # delete the old tag remotely


Merge:
    List all files with conflicts:
        git ls-merge

    Resolve conflicts in a file:
        1. git mergetool <file-name>
        2. ... VS starts ...
        3. ... change the file in VS ...     # ðŸ’©ðŸ’©ðŸ’© See below if VS cannot make a 3 way merge ðŸ’©ðŸ’©ðŸ’©
        4. ... save the file in VS ...
        5. ... close VS ...
        6. git commit

    What if VS could not make a 3 way merge of a file?
        1. edit the file manually
        2. git add <file-name>     # to mark the file as merged

    Overwrite the file with the local version:
        git checkout --ours <file-name>
        git add <file-name>     # ðŸš¨ðŸš¨TO VERIFYðŸš¨ðŸš¨
          
    Overwrite the file with the remote version:
        git checkout --theirs <file-name>
        git add <file-name>     # ðŸš¨ðŸš¨TO VERIFYðŸš¨ðŸš¨
          
    Abort the merge phase if nothing has been committed:
        git merge --abort


Stash:
    Move uncommitted changes:
        1. git stash
        2. ... move to another branch ...
        3. git stash pop

    Delete stash:
        git stash drop


Branches:
    Create a new branch:
        git co -b <branch-name>
        git push origin <branch-name>

    Show all remote brances:
        git branch -r

    Force-overwrite remote release branch with local release branch:
        git push origin +release:release

    Move branch to a specific commit:
        git reset --hard <commit-id>
        git push --force origin <branch-name>

    Delete local branch:
        git branch -d <branch-name>


Commits:
    Edit unpushed commit message:
        git commit --amend

    Edit last pushed commit message:
        git commit --amend
        git push --force-with-lease origin <branch-name>
    
    Delete already pushed commit:
        # ðŸš¨ðŸš¨WARNINGðŸš¨ðŸš¨: make a copy (in some way, I didn't investigate how to do it) of the commit that you want to delete if you want to preserve its content!!
        git status    # check that there are no uncommitted changes: all uncommitted changes will deleted!
        git reset --hard <commit-id>
        git push --force origin <branch-name>


.gitconfig path:
    C:\Users\[username]\.gitconfig

Link of the doc:
    https://github.com/dpaissan/gitmydoc/blob/main/doc.txt
